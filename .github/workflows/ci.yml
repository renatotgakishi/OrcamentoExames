name: CI - OrcamentoMedico

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 17 (SonarCloud requirement)
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'

    - name: Checkout do código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # necessário para SonarCloud

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        mkdir -p ${{ runner.temp }}/scanner
        dotnet tool update dotnet-sonarscanner --tool-path ${{ runner.temp }}/scanner

    - name: Subir infraestrutura com Docker Compose
      run: docker compose -f scripts/docker-compose.dev.yml up -d

    - name: Esperar SQL Server iniciar
      run: sleep 20

    - name: Instalar sqlcmd no runner
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev

    - name: Executar script SQL de inicialização
      run: |
        /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P MinhaSenha123! -i scripts/init.sql

    - name: Verificar se a API está ativa
      run: |
        for i in {1..10}; do
          if curl -s --head http://localhost:5135/swagger/index.html | grep "200 OK"; then
            echo "API está ativa"
            break
          fi
          echo "Aguardando API subir..."
          sleep 5
        done


    - name: Begin SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ${{ runner.temp }}/scanner/dotnet-sonarscanner begin \
          /k:"renatotgakishi_OrcamentoExames" \
          /o:"renatotgakishi" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: Restaurar dependências
      run: dotnet restore

    - name: Build do projeto
      run: dotnet build --no-restore

    - name: Rodar testes
      run: dotnet test --no-build --collect:"XPlat Code Coverage"

    - name: End SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ${{ runner.temp }}/scanner/dotnet-sonarscanner end \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"